{
    "swagger": "2.0",
    "info": {
        "description": "Documentación del API que conecta con el core de BLion",
        "title": "BLion",
        "termsOfService": "https://www.bjungle.net/terms/",
        "contact": {
            "name": "API Support",
            "url": "https://www.bjungle.net",
            "email": "info@bjungle.net"
        },
        "license": {
            "name": "Software Owner",
            "url": "https://www.bjungle.net/terms/licenses"
        },
        "version": "1.1"
    },
    "host": "https://sandbox.btigersystem.net/blion/dev/consenso",
    "basePath": "/",
    "paths": {
        "/api/v1/block/current-lottery": {
            "get": {
                "description": "Método para obtener la lotería actual",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Block"
                ],
                "summary": "Método para obtener la lotería actual",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/blocks.resCurrentLottery"
                        }
                    }
                }
            }
        },
        "/api/v1/block/get-all/{limit}/{offset}": {
            "get": {
                "description": "Método para obtener todos los bloques de la Blockchain de BLion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Block"
                ],
                "summary": "Método para obtener todos los bloques de la Blockchain",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Número de bloques por petición",
                        "name": "limit",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Salto de bloques por petición",
                        "name": "offset",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/blocks.ResAllBlocks"
                        }
                    }
                }
            }
        },
        "/api/v1/block/{id}": {
            "get": {
                "description": "Método para obtener un bloque de la Blockchain por su ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Block"
                ],
                "summary": "Método para obtener un bloque de la Blockchain por su ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id del bloque",
                        "name": "block",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/blocks.ResBlock"
                        }
                    }
                }
            }
        },
        "/api/v1/miner/block-to-mine": {
            "get": {
                "description": "Método para obtener el bloque a minar",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Miner"
                ],
                "summary": "Método para obtener el bloque a minar",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/miner.responseGetBlock"
                        }
                    }
                }
            }
        },
        "/api/v1/miner/hash-mined": {
            "get": {
                "description": "Método para obtener el hash del bloque minado",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Miner"
                ],
                "summary": "Método para obtener el hash del bloque minado",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/miner.responseHashMined"
                        }
                    }
                }
            }
        },
        "/api/v1/miner/register-mined": {
            "post": {
                "description": "Método para registrar el hash del bloque minado",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Miner"
                ],
                "summary": "Método para registrar el hash del bloque minado",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Datos del hash del bloque minado",
                        "name": "rqRegisterMined",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/miner.rqRegisterMined"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/miner.responseRegisterMined"
                        }
                    }
                }
            }
        },
        "/api/v1/participants/info/{wallet}": {
            "get": {
                "description": "Método para obtener la información de un participante por su wallet id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Participants"
                ],
                "summary": "Método para obtener la información de un participante",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Id de la wallet",
                        "name": "wallet",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/participants.resParticipant"
                        }
                    }
                }
            }
        },
        "/api/v1/participants/register": {
            "post": {
                "description": "Método para registrar un participante en la lotería actual",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Participants"
                ],
                "summary": "Método para registrar un participante en la lotería actual",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Datos para registrarse en la lotería",
                        "name": "requestRegisterParticipant",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/participants.requestRegisterParticipant"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/participants.responseRegisterParticipant"
                        }
                    }
                }
            }
        },
        "/api/v1/sign/create": {
            "post": {
                "description": "Método para crear una firma del cuerpo de la transacción",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sign"
                ],
                "summary": "Método para crear una firma del cuerpo de la transacción",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Datos para registrar la firma",
                        "name": "ReqSign",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sign.ReqSign"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sign.ResSign"
                        }
                    }
                }
            }
        },
        "/api/v1/sign/export": {
            "post": {
                "description": "Método para exportar firmas por id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sign"
                ],
                "summary": "Método para exportar firmas por id",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Ids de los registros",
                        "name": "ReqExportSign",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sign.ReqExportSign"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sign.ResExportSign"
                        }
                    }
                }
            }
        },
        "/api/v1/transaction/all/{block}": {
            "get": {
                "description": "Método para obtener todas las transacciones por el id del bloque de la blockchain",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transacción"
                ],
                "summary": "Método para obtener todas las transacciones por el id del bloque",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id del bloque",
                        "name": "block",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transactions.ResTransaction"
                        }
                    }
                }
            }
        },
        "/api/v1/transaction/all/{limit}/{offset}": {
            "get": {
                "description": "Método para obtener todas las transacciones de la blockchain",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transacción"
                ],
                "summary": "Método para obtener todas las transacciones de la blockchain",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Número de transacciones por petición",
                        "name": "limit",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Salto de transacciones por petición",
                        "name": "offset",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transactions.ResTransactions"
                        }
                    }
                }
            }
        },
        "/api/v1/transaction/{trx}": {
            "get": {
                "description": "Método para obtener una transacción de la blockchain por su id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transacción"
                ],
                "summary": "Método para obtener una transacción de la blockchain por su id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id de la transacción",
                        "name": "trx",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transactions.ResTransaction"
                        }
                    }
                }
            }
        },
        "/api/v1/user/accounting/{wallet}": {
            "get": {
                "description": "Método para obtener una cuenta asociada a una wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Método para obtener una cuenta por wallet id",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Id de la wallet",
                        "name": "wallet",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.resAccount"
                        }
                    }
                }
            }
        },
        "/api/v1/user/active": {
            "post": {
                "description": "Método para activar la cuenta de un usuario recién creado",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Método para activar la cuenta",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Datos para activar la cuenta",
                        "name": "requestActivateUser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.requestActivateUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.responseAnny"
                        }
                    }
                }
            }
        },
        "/api/v1/user/active-wallet": {
            "post": {
                "description": "Método para activar la wallet de un usuario recién creada",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Método para activar la wallet",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Datos para activar la wallet",
                        "name": "requestActivateWallet",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.requestActivateWallet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.responseActivateWallet"
                        }
                    }
                }
            }
        },
        "/api/v1/user/change-pwd": {
            "post": {
                "description": "Método para cambiar de contraseña",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Método para cambiar de contraseña",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Datos para cambiar la contraseña",
                        "name": "ChangePwd",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.ChangePwd"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.responseAnny"
                        }
                    }
                }
            }
        },
        "/api/v1/user/create": {
            "post": {
                "description": "Método para crear un usuario en BLion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Método para crear un usuario en BLion",
                "parameters": [
                    {
                        "description": "Datos para la creación del usuario",
                        "name": "requestCreateUser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.requestCreateUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.responseAnny"
                        }
                    }
                }
            }
        },
        "/api/v1/user/create-wallet": {
            "post": {
                "description": "Método para crea la wallet de un usuario",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Método para crear la wallet",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.responseCreateWallet"
                        }
                    }
                }
            }
        },
        "/api/v1/user/freeze-money/{wallet}": {
            "get": {
                "description": "Método para obtener la cantidad de acais congelados",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Método para obtener la cantidad de acais congelados",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Id de la wallet",
                        "name": "wallet",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.resFreezeMoney"
                        }
                    }
                }
            }
        },
        "/api/v1/user/login": {
            "post": {
                "description": "Método para autenticarse en BLion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Método de autenticación",
                "parameters": [
                    {
                        "description": "Datos de inicio de sesión",
                        "name": "rqLogin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.rqLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.responseLogin"
                        }
                    }
                }
            }
        },
        "/api/v1/user/request-change-pwd": {
            "post": {
                "description": "Método para solicitar la recuperación de la cuenta",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Método para solicitar la recuperación de la cuenta",
                "parameters": [
                    {
                        "description": "Datos para restablecer la cuenta",
                        "name": "ReqChangePwd",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.ReqChangePwd"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.responseAnny"
                        }
                    }
                }
            }
        },
        "/api/v1/user/wallets": {
            "get": {
                "description": "Método para obtener una wallet por un user id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Método para obtener una wallet por un user id",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.resGetWallets"
                        }
                    }
                }
            }
        },
        "/api/v1/validators/register": {
            "post": {
                "description": "Método para registrar el voto de un validador",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Validator"
                ],
                "summary": "Método para registrar el voto de un validador",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Datos para registrar el voto",
                        "name": "rqRegisterVote",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/validator.rqRegisterVote"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/validator.resRegisterVote"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "blocks.Block": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "data": {
                    "type": "string"
                },
                "difficulty": {
                    "type": "integer"
                },
                "hash": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "id_user": {
                    "type": "string"
                },
                "last_validation_date": {
                    "type": "string"
                },
                "mined_at": {
                    "type": "string"
                },
                "mined_by": {
                    "type": "string"
                },
                "nonce": {
                    "type": "integer"
                },
                "prev_hash": {
                    "type": "string"
                },
                "status_id": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "blocks.Lottery": {
            "type": "object",
            "properties": {
                "block_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lottery_end_date": {
                    "type": "string"
                },
                "lottery_start_date": {
                    "type": "string"
                },
                "process_end_date": {
                    "type": "string"
                },
                "process_status": {
                    "type": "integer"
                },
                "registration_end_date": {
                    "type": "string"
                },
                "registration_start_date": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "blocks.ResAllBlocks": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/blocks.Block"
                    }
                },
                "error": {
                    "type": "boolean"
                },
                "msg": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "blocks.ResBlock": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/blocks.Block"
                },
                "error": {
                    "type": "boolean"
                },
                "msg": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "blocks.resCurrentLottery": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/blocks.Lottery"
                },
                "error": {
                    "type": "boolean"
                },
                "msg": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "miner.DataBlockToMine": {
            "type": "object",
            "properties": {
                "cuota": {
                    "type": "number"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "difficulty": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "prev_hash": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "miner.responseGetBlock": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/miner.DataBlockToMine"
                },
                "error": {
                    "type": "boolean"
                },
                "msg": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "miner.responseHashMined": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/miner_response.MinerResponse"
                },
                "error": {
                    "type": "boolean"
                },
                "msg": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "miner.responseRegisterMined": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "msg": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "miner.rqRegisterMined": {
            "type": "object",
            "properties": {
                "difficulty": {
                    "type": "integer"
                },
                "hash": {
                    "type": "string"
                },
                "nonce": {
                    "type": "integer"
                },
                "wallet_id": {
                    "type": "string"
                }
            }
        },
        "miner_response.MinerResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "difficulty": {
                    "type": "integer"
                },
                "hash": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lottery_id": {
                    "type": "string"
                },
                "nonce": {
                    "type": "integer"
                },
                "participants_id": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "participants.InfoParticipant": {
            "type": "object",
            "properties": {
                "accepted": {
                    "type": "boolean"
                },
                "charge": {
                    "type": "integer"
                }
            }
        },
        "participants.requestRegisterParticipant": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                }
            }
        },
        "participants.resParticipant": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/participants.InfoParticipant"
                },
                "error": {
                    "type": "boolean"
                },
                "msg": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "participants.responseRegisterParticipant": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "msg": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "sign.ReqExportSign": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "sign.ReqSign": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                }
            }
        },
        "sign.ResExportSign": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sign.Sign"
                    }
                },
                "error": {
                    "type": "boolean"
                },
                "msg": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "sign.ResSign": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "msg": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "sign.Sign": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                }
            }
        },
        "transactions.ResTransaction": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/transactions.Transaction"
                },
                "error": {
                    "type": "boolean"
                },
                "msg": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "transactions.ResTransactions": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/transactions.Transaction"
                    }
                },
                "error": {
                    "type": "boolean"
                },
                "msg": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "transactions.Transaction": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "block": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "data": {
                    "type": "string"
                },
                "files": {
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                },
                "type_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "user.Accounting": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "id_user": {
                    "type": "string"
                },
                "id_wallet": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "user.ChangePwd": {
            "type": "object",
            "properties": {
                "confirm_password": {
                    "type": "string"
                },
                "new_password": {
                    "type": "string"
                },
                "old_password": {
                    "type": "string"
                }
            }
        },
        "user.Key": {
            "type": "object",
            "properties": {
                "mnemonic": {
                    "type": "string"
                },
                "private": {
                    "type": "string"
                },
                "public": {
                    "type": "string"
                }
            }
        },
        "user.ReqChangePwd": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                }
            }
        },
        "user.Token": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "user.Wallet": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "faults": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "identity_number": {
                    "type": "string"
                },
                "ip_device": {
                    "type": "string"
                },
                "mnemonic": {
                    "type": "string"
                },
                "rsa_public": {
                    "type": "string"
                },
                "status_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "user.requestActivateUser": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                }
            }
        },
        "user.requestActivateWallet": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "mnemonic": {
                    "type": "string"
                }
            }
        },
        "user.requestCreateUser": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "cellphone": {
                    "type": "string"
                },
                "confirm_password": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id_number": {
                    "type": "string"
                },
                "id_type": {
                    "type": "integer"
                },
                "lastname": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "user.resAccount": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/user.Accounting"
                },
                "error": {
                    "type": "boolean"
                },
                "msg": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "user.resFreezeMoney": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "number"
                },
                "error": {
                    "type": "boolean"
                },
                "msg": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "user.resGetWallets": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/user.Wallet"
                },
                "error": {
                    "type": "boolean"
                },
                "msg": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "user.responseActivateWallet": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/user.Key"
                },
                "error": {
                    "type": "boolean"
                },
                "msg": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "user.responseAnny": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "msg": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "user.responseCreateWallet": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/user.requestActivateWallet"
                },
                "error": {
                    "type": "boolean"
                },
                "msg": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "user.responseLogin": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/user.Token"
                },
                "error": {
                    "type": "boolean"
                },
                "msg": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "user.rqLogin": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "nick_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "validator.resRegisterVote": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "msg": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "validator.rqRegisterVote": {
            "type": "object",
            "properties": {
                "hash": {
                    "type": "string"
                },
                "wallet_id": {
                    "type": "string"
                }
            }
        }
    },
    "tags": [
        {
            "description": "Métodos para la gestión de los bloques",
            "name": "Block"
        },
        {
            "description": "Métodos para la gestión de los mineros",
            "name": "Miner"
        },
        {
            "description": "Métodos para la gestión de las transacciones",
            "name": "Transacción"
        },
        {
            "description": "Métodos para la gestión de participantes en la lotería",
            "name": "Participants"
        },
        {
            "description": "Métodos para la gestión de usuarios",
            "name": "User"
        },
        {
            "description": "Métodos para la gestión de validadores",
            "name": "Validator"
        },
        {
            "description": "Métodos para la gestión de la firma de la transacción",
            "name": "Sign"
        }
    ]
}